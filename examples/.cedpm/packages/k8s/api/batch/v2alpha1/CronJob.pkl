//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// CronJob represents the configuration of a single cron job.
@K8sVersion { removedIn = "1.21" }
@ModuleInfo { minPklVersion = "0.25.0" }
open module k8s.api.batch.v2alpha1.CronJob

extends ".../K8sResource.pkl"

import ".../apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"
import ".../api/batch/v1/JobSpec.pkl"
import ".../api/core/v1/ObjectReference.pkl"

fixed apiVersion: "batch/v2alpha1"

fixed kind: "CronJob"

/// Standard object's metadata.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata>
metadata: ObjectMeta?

/// Specification of the desired behavior of a cron job, including the schedule.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status>
spec: CronJobSpec?

/// Current status of a cron job.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status>
status: CronJobStatus?

/// CronJobSpec describes how the job execution will look like and when it will actually run.
class CronJobSpec {
  /// This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.
  ///
  /// Defaults to false.
  suspend: Boolean?

  /// The schedule in Cron format, see <https://en.wikipedia.org/wiki/Cron.>
  schedule: String

  /// Specifies the job that will be created when executing a CronJob.
  jobTemplate: JobTemplateSpec

  /// Optional deadline in seconds for starting the job if it misses scheduled time for any reason.
  ///
  /// Missed jobs executions will be counted as failed ones.
  startingDeadlineSeconds: Int?

  /// Specifies how to treat concurrent executions of a Job.
  ///
  /// Valid values are: - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
  concurrencyPolicy: ("Allow"|"Forbid"|"Replace")?

  /// The number of failed finished jobs to retain.
  ///
  /// This is a pointer to distinguish between explicit zero and not specified.
  failedJobsHistoryLimit: Int32?

  /// The number of successful finished jobs to retain.
  ///
  /// This is a pointer to distinguish between explicit zero and not specified.
  successfulJobsHistoryLimit: Int32?
}

/// JobTemplateSpec describes the data a Job should have when created from a template
class JobTemplateSpec {
  /// Standard object's metadata of the jobs created from this template.
  ///
  /// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata>
  metadata: ObjectMeta?

  /// Specification of the desired behavior of the job.
  ///
  /// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status>
  spec: JobSpec?
}

/// CronJobStatus represents the current state of a cron job.
class CronJobStatus {
  /// Information when was the last time the job was successfully scheduled.
  lastScheduleTime: Time?

  /// A list of pointers to currently running jobs.
  active: Listing<ObjectReference>?
}


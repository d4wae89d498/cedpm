//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// Lease defines a lease concept.
@ModuleInfo { minPklVersion = "0.25.0" }
open module k8s.api.coordination.v1.Lease

extends ".../K8sResource.pkl"

import ".../apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"

fixed apiVersion: "coordination.k8s.io/v1"

fixed kind: "Lease"

/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata>
metadata: ObjectMeta?

/// spec contains the specification of the Lease.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status>
spec: LeaseSpec?

/// LeaseSpec is a specification of a Lease.
class LeaseSpec {
  /// renewTime is a time when the current holder of a lease has last updated the lease.
  renewTime: MicroTime?

  /// leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it.
  ///
  /// This is measure against time of last observed renewTime.
  leaseDurationSeconds: Int32?

  /// leaseTransitions is the number of transitions of a lease between holders.
  leaseTransitions: Int32?

  /// acquireTime is a time when the current lease was acquired.
  acquireTime: MicroTime?

  /// holderIdentity contains the identity of the holder of a current lease.
  holderIdentity: String?
}


//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// SubjectAccessReviewStatus
@ModuleInfo { minPklVersion = "0.25.0" }
module k8s.api.authorization.v1.SubjectAccessReviewStatus

extends ".../K8sObject.pkl"

/// Reason is optional.
///
/// It indicates why a request was allowed or denied.
reason: String?

/// Allowed is required.
///
/// True if the action would be allowed, false otherwise.
allowed: Boolean

/// EvaluationError is an indication that some error occurred during the authorization check.
///
/// It is entirely possible to get an error and be able to continue determine authorization status in spite of it.
/// For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
evaluationError: String?

/// Denied is optional.
///
/// True if the action would be denied, otherwise false.
/// If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action.
/// Denied may not be true if Allowed is true.
denied: Boolean?(allowed.implies(this == false))


//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// ClusterCIDR represents a single configuration for per-Node Pod CIDR allocations when the MultiCIDRRangeAllocator is enabled (see the config for kube-controller-manager).
///
/// A cluster may have any number of ClusterCIDR resources, all of which will be considered when allocating a CIDR for a Node.
/// A ClusterCIDR is eligible to be used for a given Node when the node selector matches the node in question and has free CIDRs to allocate.
/// In case of multiple matching ClusterCIDR resources, the allocator will attempt to break ties using internal heuristics, but any ClusterCIDR whose node selector matches the Node may be used.
@K8sVersion { introducedIn = "1.25"; removedIn = "1.29" }
@ModuleInfo { minPklVersion = "0.25.0" }
open module k8s.api.networking.v1alpha1.ClusterCIDR

extends ".../K8sResource.pkl"

import ".../apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"
import ".../api/core/v1/NodeSelector.pkl"

fixed apiVersion: "networking.k8s.io/v1alpha1"

fixed kind: "ClusterCIDR"

/// Standard object's metadata.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata>
metadata: ObjectMeta?

/// spec is the desired state of the ClusterCIDR.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status>
spec: ClusterCIDRSpec?

/// ClusterCIDRSpec defines the desired state of ClusterCIDR.
class ClusterCIDRSpec {
  /// ipv4 defines an IPv4 IP block in CIDR notation(e.g. "10.0.0.0/8").
  ///
  /// At least one of ipv4 and ipv6 must be specified.
  /// This field is immutable.
  ipv4: String?

  /// perNodeHostBits defines the number of host bits to be configured per node.
  ///
  /// A subnet mask determines how much of the address is used for network bits and host bits.
  /// For example an IPv4 address of 192.168.0.0/24, splits the address into 24 bits for the network portion and 8 bits for the host portion.
  /// To allocate 256 IPs, set this field to 8 (a /24 mask for IPv4 or a /120 for IPv6).
  /// Minimum value is 4 (16 IPs).
  /// This field is immutable.
  perNodeHostBits: Int32

  /// ipv6 defines an IPv6 IP block in CIDR notation(e.g. "2001:db8::/64").
  ///
  /// At least one of ipv4 and ipv6 must be specified.
  /// This field is immutable.
  ipv6: String?

  /// nodeSelector defines which nodes the config is applicable to.
  ///
  /// An empty or nil nodeSelector selects all nodes.
  /// This field is immutable.
  nodeSelector: NodeSelector?
}


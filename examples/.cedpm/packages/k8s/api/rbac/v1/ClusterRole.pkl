//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.
@ModuleInfo { minPklVersion = "0.25.0" }
open module k8s.api.rbac.v1.ClusterRole

extends ".../K8sResource.pkl"

import ".../apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"
import ".../apimachinery/pkg/apis/meta/v1/LabelSelector.pkl"
import ".../api/rbac/v1/PolicyRule.pkl"

fixed apiVersion: "rbac.authorization.k8s.io/v1"

fixed kind: "ClusterRole"

/// Standard object's metadata.
metadata: ObjectMeta?

/// AggregationRule is an optional field that describes how to build the Rules for this ClusterRole.
///
/// If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.
aggregationRule: AggregationRule?

/// Rules holds all the PolicyRules for this ClusterRole
rules: Listing<PolicyRule>?

/// AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
class AggregationRule {
  /// ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules.
  ///
  /// If any of the selectors match, then the ClusterRole's permissions will be added
  clusterRoleSelectors: Listing<LabelSelector>?
}


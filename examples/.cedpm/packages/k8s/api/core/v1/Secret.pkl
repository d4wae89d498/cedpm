//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// Secret holds secret data of a certain type.
///
/// The total bytes of the values in the Data field must be less than MaxSecretSize bytes.
@ModuleInfo { minPklVersion = "0.25.0" }
open module k8s.api.core.v1.Secret

extends ".../K8sResource.pkl"

import ".../apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"

fixed apiVersion: "v1"

fixed kind: "Secret"

/// Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified).
///
/// If not set to true, the field can be modified at any time.
/// Defaulted to nil.
immutable: Boolean?

/// Standard object's metadata.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata>
metadata: ObjectMeta?

/// Data contains the secret data.
///
/// Each key must consist of alphanumeric characters, '-', '_' or '.'.
/// The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here.
/// Described in <https://tools.ietf.org/html/rfc4648#section-4>
data: Mapping<String, String>?

/// Used to facilitate programmatic handling of secret data.
///
/// More info: <https://kubernetes.io/docs/concepts/configuration/secret/#secret-types>
type: String?

/// stringData allows specifying non-binary secret data in string form.
///
/// It is provided as a write-only input field for convenience.
/// All keys and values are merged into the data field on write, overwriting any existing values.
/// The stringData field is never output when reading from the API.
stringData: Mapping<String, String>?


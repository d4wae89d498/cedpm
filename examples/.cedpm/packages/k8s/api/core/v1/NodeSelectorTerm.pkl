//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// A null or empty node selector term matches no objects.
///
/// The requirements of them are ANDed.
/// The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
@ModuleInfo { minPklVersion = "0.25.0" }
module k8s.api.core.v1.NodeSelectorTerm

extends ".../K8sObject.pkl"

/// A list of node selector requirements by node's labels.
matchExpressions: Listing<NodeSelectorRequirement>?

/// A list of node selector requirements by node's fields.
matchFields: Listing<NodeSelectorRequirement>?

/// A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
class NodeSelectorRequirement {
  /// An array of string values.
  ///
  /// If the operator is In or NotIn, the values array must be non-empty.
  /// If the operator is Exists or DoesNotExist, the values array must be empty.
  /// If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer.
  /// This array is replaced during a strategic merge patch.
  values: Listing<String>?

  /// The label key that the selector applies to.
  key: String

  /// Represents a key's relationship to a set of values.
  ///
  /// Valid operators are In, NotIn, Exists, DoesNotExist.
  /// Gt, and Lt.
  operator: String
}


//===----------------------------------------------------------------------===//
// Copyright Â© 2024 Apple Inc. and the Pkl project authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//===----------------------------------------------------------------------===//

/// Condition contains details for one aspect of the current state of this API Resource.
@K8sVersion { introducedIn = "1.20" }
@ModuleInfo { minPklVersion = "0.25.0" }
module k8s.apimachinery.pkg.apis.meta.v1.Condition

extends ".../K8sObject.pkl"

/// reason contains a programmatic identifier indicating the reason for the condition's last transition.
///
/// Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API.
/// The value should be a CamelCase string.
/// This field may not be empty.
reason: String

/// lastTransitionTime is the last time the condition transitioned from one status to another.
///
/// This should be when the underlying condition changed.
/// If that is not known, then using the time when the API field changed is acceptable.
lastTransitionTime: Time

/// message is a human readable message indicating details about the transition.
///
/// This may be an empty string.
message: String

/// type of condition in CamelCase or in foo.example.com/CamelCase.
type: String

/// observedGeneration represents the .metadata.generation that the condition was set based upon.
///
/// For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
observedGeneration: Int?

/// status of the condition, one of True, False, Unknown.
status: String

